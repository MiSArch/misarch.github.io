"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[82911],{17038:(e,t,s)=>{s.r(t),s.d(t,{Badge:()=>x,Bullet:()=>o,Details:()=>h,SpecifiedBy:()=>p,assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>u});var a=s(85893),r=s(11151),n=s(67294);const c={id:"string",title:"String"},i=void 0,d={id:"graphql/tax/types/scalars/string",title:"String",description:"The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",source:"@site/docs/graphql/tax/types/scalars/string.mdx",sourceDirName:"graphql/tax/types/scalars",slug:"/graphql/tax/types/scalars/string",permalink:"/docs/graphql/tax/types/scalars/string",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"string",title:"String"},sidebar:"graphqlSidebar",previous:{title:"link__Import",permalink:"/docs/graphql/tax/types/scalars/link-import"},next:{title:"UUID",permalink:"/docs/graphql/tax/types/scalars/uuid"}},l={},o=()=>{const e={span:"span",...(0,r.a)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},p=e=>{const t={a:"a",...(0,r.a)()};return(0,a.jsxs)(a.Fragment,{children:["Specification",(0,a.jsx)(t.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},x=e=>{const t={span:"span",...(0,r.a)()};return(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(t.span,{className:e.class,children:e.text})})},h=({dataOpen:e,dataClose:t,children:s,startOpen:c=!1})=>{const i={details:"details",summary:"summary",...(0,r.a)()},[d,l]=(0,n.useState)(c);return(0,a.jsxs)(i.details,{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,a.jsx)(i.summary,{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"},children:d?e:t}),d&&s]})},u=[{value:"Member Of",id:"member-of",level:3}];function g(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"String"})," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-graphql",children:"scalar String\n"})}),"\n",(0,a.jsx)(t.h3,{id:"member-of",children:"Member Of"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/inputs/create-tax-rate-input",children:(0,a.jsx)(t.code,{children:"CreateTaxRateInput"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"input"}),(0,a.jsx)(o,{}),(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/directives/deprecated",children:(0,a.jsx)(t.code,{children:"deprecated"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"directive"}),(0,a.jsx)(o,{}),(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/directives/link",children:(0,a.jsx)(t.code,{children:"link"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"directive"}),(0,a.jsx)(o,{}),(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/directives/specified-by",children:(0,a.jsx)(t.code,{children:"specifiedBy"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"directive"}),(0,a.jsx)(o,{}),(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/objects/tax-rate",children:(0,a.jsx)(t.code,{children:"TaxRate"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"object"}),(0,a.jsx)(o,{}),(0,a.jsx)(t.a,{href:"/docs/graphql/tax/types/inputs/update-tax-rate-input",children:(0,a.jsx)(t.code,{children:"UpdateTaxRateInput"})}),"  ",(0,a.jsx)(x,{class:"badge badge--secondary",text:"input"})]})]})}function m(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(g,{...e})}):g(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>c});var a=s(67294);const r={},n=a.createContext(r);function c(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);