"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[99271],{31173:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>h});var i=t(85893),o=t(11151),s=t(4106);const d={sidebar_position:1},r="Domain Model",a={id:"docs/dev-manuals/architecture/domain-model",title:"Domain Model",description:"Domain Model",source:"@site/docs/docs/dev-manuals/architecture/domain-model.mdx",sourceDirName:"docs/dev-manuals/architecture",slug:"/docs/dev-manuals/architecture/domain-model",permalink:"/docs/docs/dev-manuals/architecture/domain-model",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Architecture",permalink:"/docs/category/architecture"},next:{title:"Requirements",permalink:"/docs/docs/dev-manuals/architecture/requirements"}},c={},h=[{value:"Domain Model",id:"domain-model-1",level:2},{value:"Domain Model with Bounded Contexts",id:"domain-model-with-bounded-contexts",level:2},{value:"Implications of the Domain Model",id:"implications-of-the-domain-model",level:2},{value:"Regarding <code>User</code>, <code>Account</code>, <code>Wishlist</code> and <code>Address</code>",id:"regarding-user-account-wishlist-and-address",level:3},{value:"Regarding <code>ShoppingCart</code>",id:"regarding-shoppingcart",level:3},{value:"Regarding <code>Discount</code>",id:"regarding-discount",level:3},{value:"Regarding <code>TaxRate</code>",id:"regarding-taxrate",level:3},{value:"Regarding <code>Notification</code>",id:"regarding-notification",level:3},{value:"Regarding <code>Invoice</code> and <em>Payment</em>",id:"regarding-invoice-and-payment",level:3},{value:"Regarding <em>Inventory</em>",id:"regarding-inventory",level:3},{value:"Regarding <em>Category</em>",id:"regarding-category",level:3}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"domain-model",children:"Domain Model"}),"\n",(0,i.jsx)(n.h2,{id:"domain-model-1",children:"Domain Model"}),"\n",(0,i.jsx)(s.Z,{path:"/renderedDiagrams/domainModel",width:"2803",height:"2341"}),"\n",(0,i.jsx)(n.h2,{id:"domain-model-with-bounded-contexts",children:"Domain Model with Bounded Contexts"}),"\n",(0,i.jsx)(s.Z,{path:"/renderedDiagrams/domainModelBC",width:"2820.5",height:"2398.5"}),"\n",(0,i.jsx)(n.h2,{id:"implications-of-the-domain-model",children:"Implications of the Domain Model"}),"\n",(0,i.jsxs)(n.p,{children:["Note, that entities of the domain model are formatted like this: ",(0,i.jsx)(n.code,{children:"Entity"}),". A bounded context on the other hand has the following format: ",(0,i.jsx)(n.em,{children:"Bounded Context"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-user-account-wishlist-and-address",children:["Regarding ",(0,i.jsx)(n.code,{children:"User"}),", ",(0,i.jsx)(n.code,{children:"Account"}),", ",(0,i.jsx)(n.code,{children:"Wishlist"})," and ",(0,i.jsx)(n.code,{children:"Address"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["To be able to order something from the store, a user needs an account. See: ",(0,i.jsx)(n.code,{children:"User"})," has one ",(0,i.jsx)(n.code,{children:"Account"}),'. This implies that the store does not support something like "checkout as guest".']}),"\n",(0,i.jsxs)(n.li,{children:["Addresses stored by the system do not have to be distinct regarding their actual physical address. The system may store multiple instances of the same physical address. One ",(0,i.jsx)(n.code,{children:"Address"})," cannot be related to multiple ",(0,i.jsx)(n.code,{children:"User"})," instances."]}),"\n",(0,i.jsx)(n.li,{children:"A user's wishlists are private and cannot be seen by other users."}),"\n",(0,i.jsx)(n.li,{children:"Reviews can only be viewed. No further interactions with them are possible. Reviews do not have medias."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-shoppingcart",children:["Regarding ",(0,i.jsx)(n.code,{children:"ShoppingCart"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.em,{children:"Inventory"})," contains ",(0,i.jsx)(n.code,{children:"ProductItems"}),". These ",(0,i.jsx)(n.code,{children:"ProductItems"})," do not know anything about existing ",(0,i.jsx)(n.code,{children:"ShoppingCarts"}),". That means a ",(0,i.jsx)(n.code,{children:"ProductItem"})," does not know whether or not it has been added to a ",(0,i.jsx)(n.code,{children:"ShoppingCart"})," in form of a ",(0,i.jsx)(n.code,{children:"ShoppingCartItem"}),". This implies that when the user wants to ",(0,i.jsx)(n.em,{children:"finish"})," the order, the system must check once again whether or not the ",(0,i.jsx)(n.code,{children:"ProductItem"}),' is actually still available because it could have been ordered by a "faster" user in the meantime. In a nutshell, the user cannot reserve items by putting them in the shopping cart.']}),"\n",(0,i.jsx)(n.li,{children:"A user can have exactly one shopping cart at a time accross their devices. The shopping cart is independent of the client device used."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-discount",children:["Regarding ",(0,i.jsx)(n.code,{children:"Discount"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The store only offers discounts -- see ",(0,i.jsx)(n.code,{children:"Discount"})," -- in percentages. The store does not have gift cards with a credit (money).\nIn order to have the option to apply a discount to a product, the user needs a coupon -- see ",(0,i.jsx)(n.code,{children:"Coupon"}),". A coupon is associated with a fixed discount."]}),"\n",(0,i.jsxs)(n.li,{children:["In general, a ",(0,i.jsx)(n.code,{children:"Discount"})," can be applied to every product of the store. In order to exclude products from a ",(0,i.jsx)(n.code,{children:"Discount"}),', a "filter" needs to be set up. A filter serves as a whitelist. There are three filter options: filter by ',(0,i.jsx)(n.code,{children:"Product"}),", filter by ",(0,i.jsx)(n.code,{children:"Product Variant"}),", and filter by ",(0,i.jsx)(n.code,{children:"Category"})," -- see the corresponding associations in the domain model: ",(0,i.jsx)(n.code,{children:"filterByProduct"}),", ",(0,i.jsx)(n.code,{children:"filterByProductVariant"}),", and ",(0,i.jsx)(n.code,{children:"filterByCategory"}),". As soon as one of these has been set up, only the explicitly filtered products / variants / products of the category are part of the discount's scope. Filters can be combined which means that the ",(0,i.jsx)(n.code,{children:"Discount"}),' can be used for a product if the product "is part of" one of the filters. To clearify things: If one has set up three filters, then if the product can be found in the first filter or if the product can be found in the second filter or if the product can be found in the third filter, then the discount is applicable to the product. If the product can be found in multiple of the three filters, then the discount is of course also applicable to the product. Only if it cannot be found in any of the three, then the discount cannot be used for the product.']}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-taxrate",children:["Regarding ",(0,i.jsx)(n.code,{children:"TaxRate"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The store can only serve one country, to be more precise: one tax rate region. That means that every country where the store should be available needs to set up the store individually. The reason for that is that a single ",(0,i.jsx)(n.code,{children:"ProductVariantVersion"})," must have exactly one ",(0,i.jsx)(n.code,{children:"TaxRate"}),"; it cannot have multiple. The domain model does not account for the fact that tax rates actually vary from country to country."]}),"\n",(0,i.jsxs)(n.li,{children:["A tax rate does not depend on the user's status. Tax refunds / deduction are not supported by the system. The payment ",(0,i.jsx)(n.code,{children:"Receipt"})," can be used to get tax refunds / deduction at the responsible authorities if possible."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-notification",children:["Regarding ",(0,i.jsx)(n.code,{children:"Notification"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Notifications are ",(0,i.jsx)(n.em,{children:"in-house"})," meaning within-the-system notifications and they are not emails or text messages or anything else."]}),"\n",(0,i.jsx)(n.li,{children:"For the user, notifications are read-only. Users can only receive notifications, they cannot reply to them."}),"\n",(0,i.jsx)(n.li,{children:"A notification can only be sent to exactly one user, it cannot be sent to multiple users at once."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-invoice-and-payment",children:["Regarding ",(0,i.jsx)(n.code,{children:"Invoice"})," and ",(0,i.jsx)(n.em,{children:"Payment"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["An ",(0,i.jsx)(n.code,{children:"Invoice"})," can only refer to exactly one ",(0,i.jsx)(n.code,{children:"Order"})," and to nothing else."]}),"\n",(0,i.jsxs)(n.li,{children:["If an ",(0,i.jsx)(n.code,{children:"Invoice"})," has an associated ",(0,i.jsx)(n.code,{children:"Payment"}),", then the payment has been made -- the store has received the money. If not, then the payment is still due. This implies that the association between ",(0,i.jsx)(n.code,{children:"Invoice"})," and ",(0,i.jsx)(n.code,{children:"Payment"})," fully models the payment's status."]}),"\n",(0,i.jsx)(n.li,{children:"The store exclusively supports payment methods which result in the payment being processed before the shipping of any ordered items. This implies that the user must always pay first before they can receive the order."}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-inventory",children:["Regarding ",(0,i.jsx)(n.em,{children:"Inventory"})]}),"\n",(0,i.jsxs)(n.p,{children:["Since the domain model does not account for returned items, this implies that returned items will simply be thrown away after they have been returned to the ",(0,i.jsx)(n.em,{children:"Inventory"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"regarding-category",children:["Regarding ",(0,i.jsx)(n.em,{children:"Category"})]}),"\n",(0,i.jsx)(n.p,{children:"The store has no category inheritance.\nAll categories are separate."})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},4106:(e,n,t)=>{t.d(n,{Z:()=>h});var i=t(92949),o=t(44996),s=t(67294),d=t(99276),r=t(85893);function a(e){let{image:n}=e;const i=(0,s.useId)();return(0,s.useEffect)((()=>{let e=new d.Z({gallery:"#"+CSS.escape(i),children:"a",pswpModule:()=>t.e(15826).then(t.bind(t,15826))});return e.init(),()=>{e.destroy(),e=null}}),[]),(0,r.jsx)("div",{className:"pswp-gallery",id:i,children:(0,r.jsx)("a",{href:n.url,"data-pswp-width":n.width,"data-pswp-height":n.height,target:"_blank",rel:"noreferrer",children:(0,r.jsx)("img",{src:n.url,alt:n.alt})},i+"-0")})}var c=t(91262);function h(e){let{path:n,extension:t,alt:s,width:d,height:h}=e;const{colorMode:l}=(0,i.I)(),u={url:(0,o.Z)(`${n}-${l}.${t??"svg"}`),alt:s,width:d,height:h};return(0,r.jsx)(c.Z,{children:()=>(0,r.jsx)(a,{image:u})})}}}]);