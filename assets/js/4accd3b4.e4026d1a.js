"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[48259],{72116:(e,r,s)=>{s.r(r),s.d(r,{Badge:()=>h,Bullet:()=>o,Details:()=>u,SpecifiedBy:()=>p,assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>x});var t=s(85893),a=s(11151),n=s(67294);const i={id:"string",title:"String"},c=void 0,d={id:"graphql/review/types/scalars/string",title:"String",description:"The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",source:"@site/docs/graphql/review/types/scalars/string.mdx",sourceDirName:"graphql/review/types/scalars",slug:"/graphql/review/types/scalars/string",permalink:"/docs/graphql/review/types/scalars/string",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"string",title:"String"},sidebar:"graphqlSidebar",previous:{title:"link__Import",permalink:"/docs/graphql/review/types/scalars/link-import"},next:{title:"UUID",permalink:"/docs/graphql/review/types/scalars/uuid"}},l={},o=()=>{const e={span:"span",...(0,a.a)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(e.span,{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"},children:"\xa0\u25cf\xa0"})})},p=e=>{const r={a:"a",...(0,a.a)()};return(0,t.jsxs)(t.Fragment,{children:["Specification",(0,t.jsx)(r.a,{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url,children:"\u2398"})]})},h=e=>{const r={span:"span",...(0,a.a)()};return(0,t.jsx)(t.Fragment,{children:(0,t.jsx)(r.span,{className:e.class,children:e.text})})},u=({dataOpen:e,dataClose:r,children:s,startOpen:i=!1})=>{const c={details:"details",summary:"summary",...(0,a.a)()},[d,l]=(0,n.useState)(i);return(0,t.jsxs)(c.details,{...d?{open:!0}:{},className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"},children:[(0,t.jsx)(c.summary,{onClick:e=>{e.preventDefault(),l((e=>!e))},style:{listStyle:"none"},children:d?e:r}),d&&s]})},x=[{value:"Member Of",id:"member-of",level:3}];function g(e){const r={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"String"})," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-graphql",children:"scalar String\n"})}),"\n",(0,t.jsx)(r.h3,{id:"member-of",children:"Member Of"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/inputs/create-review-input",children:(0,t.jsx)(r.code,{children:"CreateReviewInput"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"input"}),(0,t.jsx)(o,{}),(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/directives/deprecated",children:(0,t.jsx)(r.code,{children:"deprecated"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"directive"}),(0,t.jsx)(o,{}),(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/directives/link",children:(0,t.jsx)(r.code,{children:"link"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"directive"}),(0,t.jsx)(o,{}),(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/objects/review",children:(0,t.jsx)(r.code,{children:"Review"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"object"}),(0,t.jsx)(o,{}),(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/directives/specified-by",children:(0,t.jsx)(r.code,{children:"specifiedBy"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"directive"}),(0,t.jsx)(o,{}),(0,t.jsx)(r.a,{href:"/docs/graphql/review/types/inputs/update-review-input",children:(0,t.jsx)(r.code,{children:"UpdateReviewInput"})}),"  ",(0,t.jsx)(h,{class:"badge badge--secondary",text:"input"})]})]})}function m(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}},11151:(e,r,s)=>{s.d(r,{Z:()=>c,a:()=>i});var t=s(67294);const a={},n=t.createContext(a);function i(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);