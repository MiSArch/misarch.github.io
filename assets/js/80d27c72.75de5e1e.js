"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[22674],{88341:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=o(85893),i=o(11151);const s={sidebar_position:1},r="Use Monolithic Frontend",d={id:"docs/dev-manuals/adr/use-monolithic-frontend",title:"Use Monolithic Frontend",description:"Context and Problem Statement",source:"@site/docs/docs/dev-manuals/adr/0000-use-monolithic-frontend.md",sourceDirName:"docs/dev-manuals/adr",slug:"/docs/dev-manuals/adr/use-monolithic-frontend",permalink:"/docs/docs/dev-manuals/adr/use-monolithic-frontend",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"ADRs",permalink:"/docs/category/adrs"},next:{title:"Use GraphQL API Gateway",permalink:"/docs/docs/dev-manuals/adr/use-graphql-api-gateway"}},c={},l=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Considered Options",id:"considered-options",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Consequences",id:"consequences",level:3},{value:"Pros and Cons of the Options",id:"pros-and-cons-of-the-options",level:2},{value:"micro frontend",id:"micro-frontend",level:3},{value:"monolithic frontend",id:"monolithic-frontend",level:3}];function a(e){const n={em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"use-monolithic-frontend",children:"Use Monolithic Frontend"}),"\n",(0,t.jsx)(n.h2,{id:"context-and-problem-statement",children:"Context and Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"We consider two different ways of building our frontend: either a micro frontend, or a monolithic frontend."}),"\n",(0,t.jsx)(n.h2,{id:"considered-options",children:"Considered Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"micro frontend"}),"\n",(0,t.jsx)(n.li,{children:"monolithic frontend"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decision-outcome",children:"Decision Outcome"}),"\n",(0,t.jsx)(n.p,{children:'Chosen option: "monolithic frontend", because'}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"with the given resources (5 developers) and experiences, a monolithic frontend is easier to implement and thus allows us to focus on more important aspects of the reference architecture"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"consequences",children:"Consequences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Good, because we do not need to consider requirements of a micro frontend with respect to the API gateway"}),"\n",(0,t.jsx)(n.li,{children:"Neutral, because there is a single repository for the frontend."}),"\n",(0,t.jsxs)(n.li,{children:["Good, because the frontend tech stack can be chosen rather ",(0,t.jsx)(n.em,{children:"freely"}),". We decided to use Vue with Vuetify to create a single page web application."]}),"\n",(0,t.jsx)(n.li,{children:"Neutral, because all services have to support the API gateway for the frontend."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pros-and-cons-of-the-options",children:"Pros and Cons of the Options"}),"\n",(0,t.jsx)(n.h3,{id:"micro-frontend",children:"micro frontend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Good, because would result in our whole stack to be "micro" from end-to-end'}),"\n",(0,t.jsx)(n.li,{children:"Good, because would frontends of services to be developed independently"}),"\n",(0,t.jsx)(n.li,{children:"Bad, because more difficult to implement, in particular with regard to given resources"}),"\n",(0,t.jsx)(n.li,{children:"Bad, because there are several frontend components, which are not clearly associated with a specific backend service"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"monolithic-frontend",children:"monolithic frontend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Good, because easier to implement, thus allowing us to focus on more important aspects of the reference architecture"}),"\n",(0,t.jsx)(n.li,{children:"Good, because simplifies defining frontend components independant of backend service structure"}),"\n",(0,t.jsx)(n.li,{children:'Bad, because results in whole stack not being "micro" end-to-end'}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>d,a:()=>r});var t=o(67294);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);