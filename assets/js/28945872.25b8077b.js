"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[50269],{25997:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>x,frontMatter:()=>t,metadata:()=>a,toc:()=>h});var r=s(85893),i=s(11151),l=s(4106);const t={},o="How to Use the MiSArch Experiment Tool",a={id:"docs/user-manuals/how-to-use-experiment-tool",title:"How to Use the MiSArch Experiment Tool",description:"This page walks you through every step of designing, executing, and analyzing experiments with the MiSArch Experiment Tool.",source:"@site/docs/docs/user-manuals/how-to-use-experiment-tool.mdx",sourceDirName:"docs/user-manuals",slug:"/docs/user-manuals/how-to-use-experiment-tool",permalink:"/docs/docs/user-manuals/how-to-use-experiment-tool",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"How to Use the Frontend",permalink:"/docs/docs/user-manuals/how-to-use-frontend"},next:{title:"Development",permalink:"/docs/category/development"}},c={},h=[{value:"Where to Find the MiSArch Experiment Tool Frontend",id:"where-to-find-the-misarch-experiment-tool-frontend",level:3},{value:"Contents",id:"contents",level:2},{value:"What is an Experiment?",id:"what-is-an-experiment",level:2},{value:"Before You Start (Artifacts &amp; Concepts)",id:"before-you-start-artifacts--concepts",level:2},{value:"Create or Load an Experiment",id:"create-or-load-an-experiment",level:2},{value:"Tour of the User Interface",id:"tour-of-the-user-interface",level:2},{value:"Configure Work (Gatling Kotlin DSL)",id:"configure-work-gatling-kotlin-dsl",level:2},{value:"Configure Load (Open-Load Model)",id:"configure-load-open-load-model",level:2},{value:"Optional: Configure a Warm-Up",id:"optional-configure-a-warm-up",level:2},{value:"Configure Failures",id:"configure-failures",level:2},{value:"Chaos Toolkit Failures",id:"chaos-toolkit-failures",level:3},{value:"MiSArch Experiment Configuration Failures",id:"misarch-experiment-configuration-failures",level:3},{value:"Define Experiment Goals",id:"define-experiment-goals",level:2},{value:"Manual Goals",id:"manual-goals",level:3},{value:"Automated Goal Definition",id:"automated-goal-definition",level:3},{value:"Visualize with the Experiment Graph",id:"visualize-with-the-experiment-graph",level:2},{value:"Run, Stop, Save, and Version Experiments",id:"run-stop-save-and-version-experiments",level:2},{value:"Analyze Results in Grafana Dashboards",id:"analyze-results-in-grafana-dashboards",level:2},{value:"Tips, Constraints, and Gotchas",id:"tips-constraints-and-gotchas",level:2},{value:"Storage Structure &amp; Files",id:"storage-structure--files",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"how-to-use-the-misarch-experiment-tool",children:"How to Use the MiSArch Experiment Tool"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["This page walks you through ",(0,r.jsx)(n.strong,{children:"every step"})," of designing, executing, and analyzing experiments with the MiSArch Experiment Tool."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note, that the MiSArch Experiment Tool itself contains several helpful documentation in the help pages, helping you to get your experiments running."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"where-to-find-the-misarch-experiment-tool-frontend",children:"Where to Find the MiSArch Experiment Tool Frontend"}),"\n",(0,r.jsxs)(n.p,{children:["If we deploy the MiSArch system \u2014 the whole infrastructure \u2014 on our local machine using Docker, we will find the Tool at the following URL: ",(0,r.jsx)(n.a,{href:"http://localhost:5173/frontend",children:"http://localhost:5173/frontend"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"contents",children:"Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#what-is-an-experiment",children:"What is an Experiment?"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#before-you-start-artifacts--concepts",children:"Before You Start (Artifacts & Concepts)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#create-or-load-an-experiment",children:"Create or Load an Experiment"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tour-of-the-user-interface",children:"Tour of the User Interface"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#configure-work-gatling-kotlin-dsl",children:"Configure Work (Gatling Kotlin DSL)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#configure-load-open-load-model",children:"Configure Load (Open-Load Model)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#optional-configure-a-warm-up",children:"Optional: Configure a Warm-Up"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#configure-failures",children:"Configure Failures"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#chaos-toolkit-failures",children:"Chaos Toolkit Failures"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#misarch-experiment-configuration-failures",children:"MiSArch Experiment Configuration Failures"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#define-experiment-goals",children:"Define Experiment Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#manual-goals",children:"Manual Goals"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#automated-goal-definition",children:"Automated Goal Definition"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#visualize-with-the-experiment-graph",children:"Visualize with the Experiment Graph"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#run-stop-save-and-version-experiments",children:"Run, Stop, Save, and Version Experiments"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#analyze-results-in-grafana-dashboards",children:"Analyze Results in Grafana Dashboards"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tips-constraints-and-gotchas",children:"Tips, Constraints, and Gotchas"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#appendix-storage-structure--files",children:"Storage Structure & Files"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"what-is-an-experiment",children:"What is an Experiment?"}),"\n",(0,r.jsxs)(n.p,{children:["An ",(0,r.jsx)(n.strong,{children:"experiment"})," is a versioned bundle of configurations identified by ",(0,r.jsx)(n.strong,{children:"Test-UUID"})," and ",(0,r.jsx)(n.strong,{children:"Test-Version"}),". It can contain:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Work"})," (the user/session ",(0,r.jsx)(n.em,{children:"behavior"})," scripted in Gatling Kotlin DSL)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Load"})," (the ",(0,r.jsx)(n.em,{children:"arrival pattern"})," of users for each work scenario, modeled as open load)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failures"})," via:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chaos Toolkit"})," (standard experiments/probes/actions),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MiSArch Experiment Configuration"})," (service-level deterioration and resource stress)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goals"})," (thresholds for client-facing performance metrics)."]}),"\n",(0,r.jsxs)(n.li,{children:["An optional ",(0,r.jsx)(n.strong,{children:"warm-up"})," phase."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Experiments live as files in the Experiment Executor\u2019s storage, grouped by Test-UUID and version."}),"\n",(0,r.jsx)(l.Z,{path:"/diagrams/usingMiSArchExperimentBPMN",width:"1668",height:"828"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"before-you-start-artifacts--concepts",children:"Before You Start (Artifacts & Concepts)"}),"\n",(0,r.jsx)(n.p,{children:"You\u2019ll work with these pieces:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gatling Work"}),": Kotlin DSL scenarios describing the sequence of requests and expected data, plus pauses to mimic user behavior."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Gatling Load"}),": Open-load arrivals (users per second) for each scenario; duration is in seconds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chaos Toolkit"}),": Optional steady-state hypothesis (probes) and a sequence of actions/probes (with pauses) to inject failures."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MiSArch Experiment Configuration"}),": Time-ordered sets of failures for specific services:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pub-sub deterioration (delay/error on dapr pub-sub),"}),"\n",(0,r.jsx)(n.li,{children:"Service-invocation deterioration (delay/error on HTTP),"}),"\n",(0,r.jsxs)(n.li,{children:["Artificial ",(0,r.jsx)(n.strong,{children:"memory"})," or ",(0,r.jsx)(n.strong,{children:"CPU"})," usage."]}),"\n",(0,r.jsxs)(n.li,{children:["Failures ",(0,r.jsx)(n.strong,{children:"persist until overwritten"})," by the next failure set."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goals & Warm-Up"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goals"}),": e.g., max/mean response time thresholds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Warm-up"}),": constant ",(0,r.jsx)(n.em,{children:"closed"})," load per scenario for a configured time before the actual experiment."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"create-or-load-an-experiment",children:"Create or Load an Experiment"}),"\n",(0,r.jsxs)(n.p,{children:["When opening the tool you can either ",(0,r.jsx)(n.strong,{children:"load"})," an existing experiment version or ",(0,r.jsx)(n.strong,{children:"generate"})," a new one."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Experiment Selection",src:s(39990).Z+"",width:"492",height:"684"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Generating a new experiment"})," provides initial presets:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Choose a ",(0,r.jsx)(n.strong,{children:"load pattern"}),":","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Realistic"})," (sampled from a real web-shop day pattern, scaled by your max-arrivals),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"})," (monotonic increase),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Elasticity"})," (three spikes with cool-downs),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resilience"})," (slow ramp, cool-down, big spike, cool-down, high plateau)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Default ",(0,r.jsx)(n.strong,{children:"work scenarios"})," (e.g., ",(0,r.jsx)(n.code,{children:"buyProcessScenario"}),", ",(0,r.jsx)(n.code,{children:"abortedBuyProcessScenario"}),") for realistic/resilience; ",(0,r.jsx)(n.code,{children:"buyProcessScenario"})," for resilience/scalability."]}),"\n",(0,r.jsxs)(n.li,{children:["Default ",(0,r.jsx)(n.strong,{children:"failures"})," (example):","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Chaos Toolkit: check gateway healthy, then terminate it at experiment start (Kubernetes/Docker variants)."}),"\n",(0,r.jsxs)(n.li,{children:["MiSArch Config: HTTP 404 with 1000 ms delay on ",(0,r.jsx)(n.strong,{children:"catalog"})," service for 1/6 of the experiment after the Chaos failure."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Default ",(0,r.jsx)(n.strong,{children:"goals"}),": max response time ",(0,r.jsx)(n.strong,{children:"2000 ms"}),", mean ",(0,r.jsx)(n.strong,{children:"1000 ms"})," (adjust as needed)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Load Patterns",src:s(75705).Z+"",width:"4194",height:"1036"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tour-of-the-user-interface",children:"Tour of the User Interface"}),"\n",(0,r.jsx)(n.p,{children:"The single-page UI has these segments:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Header"})," (save, delete, load/new, new version, execute/stop, global help)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Experiment Graph"})," (arrivals/requests plus failure timelines; toggle between load and warm-up view)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Work Configuration"})," (code editor with tabs per scenario)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chaos Toolkit Configuration"})," (visual editor or raw JSON editor)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MiSArch Experiment Configuration"})," (visual editor or raw JSON editor)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Goal Configuration"})," (manual thresholds or auto goal definition)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Entire User Interface",src:s(79168).Z+"",width:"3454",height:"1890"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configure-work-gatling-kotlin-dsl",children:"Configure Work (Gatling Kotlin DSL)"}),"\n",(0,r.jsxs)(n.p,{children:["Open ",(0,r.jsx)(n.strong,{children:"Work"})," in the top-right editor. Each ",(0,r.jsx)(n.strong,{children:"scenario"})," is a tab:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Add / rename / delete scenarios via the UI controls."}),"\n",(0,r.jsxs)(n.li,{children:["Script ",(0,r.jsx)(n.em,{children:"requests"}),", ",(0,r.jsx)(n.em,{children:"checks"}),", and ",(0,r.jsx)(n.em,{children:"pauses"})," (Durations) to approximate realistic behavior."]}),"\n",(0,r.jsxs)(n.li,{children:["Keep work and load ",(0,r.jsx)(n.strong,{children:"separate"})," (load is configured elsewhere)."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Only the ",(0,r.jsx)(n.strong,{children:"Gatling Kotlin DSL"})," is supported for work scripts."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example code:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val abortedBuyProcessScenario = scenario("abortedBuyProcessScenario")\n  .exec { session ->\n    session.set("targetUrl", "http://misarch-gateway.misarch.svc.cluster.local:8080/graphql")\n  }\n  .exec(\n    http("Get Access Token")\n      .post("http://keycloak.misarch.svc.cluster.local:80/keycloak/realms/Misarch/protocol/openid-connect/token")\n      .check(jsonPath("$.access_token").saveAs("accessToken"))\n  )\n  .pause(Duration.ofMillis(0), Duration.ofMillis(0))\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configure-load-open-load-model",children:"Configure Load (Open-Load Model)"}),"\n",(0,r.jsxs)(n.p,{children:["Click the ",(0,r.jsx)(n.strong,{children:"gear"})," icon in the graph to open the Load Configuration."]}),"\n",(0,r.jsx)(n.p,{children:"For each scenario:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Duration (s):"})," total time during which users arrive."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Arrivals (users/s):"})," specify how many new users start the scenario each second.","\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example (10 s):"})," 3, 4, 0, 0, 0, 0, 0, 0, 0, 5\nThis does not imply no requests in \u201czero\u201d seconds\u2014users that arrived earlier are still completing work."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"optional-configure-a-warm-up",children:"Optional: Configure a Warm-Up"}),"\n",(0,r.jsxs)(n.p,{children:["Open the ",(0,r.jsx)(n.strong,{children:"hamburger menu"})," to configure a warm-up:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Duration"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constant users per scenario"})," (closed load)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This helps stabilize the system so your actual experiment measurements start under steady conditions."}),"\n",(0,r.jsx)(n.p,{children:"Replace with your warm-up dialog screenshot."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"configure-failures",children:"Configure Failures"}),"\n",(0,r.jsx)(n.p,{children:"You can define failures in two places. Both offer:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"simplified form"})," to add/remove/edit failures quickly."]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.strong,{children:"raw JSON"})," editor if you prefer direct DSL editing."]}),"\n",(0,r.jsx)(n.li,{children:"Both views stay in sync."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"chaos-toolkit-failures",children:"Chaos Toolkit Failures"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Optional ",(0,r.jsx)(n.strong,{children:"steady-state hypothesis"})," (probes) to assert system health before failure."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Method"})," actions and/or probes that inject failures; pauses available before/after."]}),"\n",(0,r.jsx)(n.li,{children:"Examples: check a Kubernetes deployment is healthy, then terminate pods matching a label; or Docker container termination and restart."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "title": "your-uuid:vX",\n  "steady-state-hypothesis": {\n    /* probes */\n  },\n  "method": [\n    {\n      "type": "action",\n      "name": "Your Action",\n      "provider": {\n        /* module/func + args */\n      },\n      "pauses": { "before": 0, "after": 0 }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"misarch-experiment-configuration-failures",children:"MiSArch Experiment Configuration Failures"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Define ",(0,r.jsx)(n.strong,{children:"failure sets"})," for one or more services at specific times, with optional pauses between sets:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"pubSubDeterioration"})," (delay/error probability),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"serviceInvocationDeterioration"})," (delay/error code/probabilities),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"artificialMemoryUsage"}),","]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"artificialCPUUsage"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Important: A failure ",(0,r.jsx)(n.strong,{children:"persists"})," until an ensuing set overwrites it\u2014this enables overlapping, time-boxed failure compositions."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "failures": [\n      {\n        "name": "catalog",\n        "pubSubDeterioration": null,\n        "serviceInvocationDeterioration": [\n          { "path": "/", "delay": 1000, "delayProbability": 1, "errorProbability": 1, "errorCode": 404 }\n        ],\n        "artificialMemoryUsage": null,\n        "artificialCPUUsage": null\n      }\n    ],\n    "pauses": { "before": 10, "after": 5 }\n  },\n  {\n    "failures": [{ "name": "catalog", "serviceInvocationDeterioration": null }],\n    "pauses": { "before": 0, "after": 0 }\n  }\n]\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"define-experiment-goals",children:"Define Experiment Goals"}),"\n",(0,r.jsx)(n.p,{children:"You can set goals manually or automatically."}),"\n",(0,r.jsx)(n.h3,{id:"manual-goals",children:"Manual Goals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For each goal, specify:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Metric"})," (dropdown),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Threshold"})," (number),"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Highlight color"})," for violations in dashboards."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"automated-goal-definition",children:"Automated Goal Definition"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provide:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Duration of the steady-state measurement,"}),"\n",(0,r.jsx)(n.li,{children:"Static users during measurement,"}),"\n",(0,r.jsx)(n.li,{children:"Factor applied to measured metrics to derive thresholds (e.g., mean response time 1000 ms \xd7 1.5 \u2192 threshold 1500 ms)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Replace with your auto-goal UI screenshot."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"visualize-with-the-experiment-graph",children:"Visualize with the Experiment Graph"}),"\n",(0,r.jsx)(n.p,{children:"The Experiment Graph shows:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Arriving users"})," and ",(0,r.jsx)(n.strong,{children:"approximate total requests"})," over time per scenario."]}),"\n",(0,r.jsx)(n.li,{children:"Vertical markers when Chaos Toolkit and MiSArch failures occur (sequential timing with configured pauses)."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Buttons"})," to switch to ",(0,r.jsx)(n.strong,{children:"Load"})," and ",(0,r.jsx)(n.strong,{children:"Warm-Up"})," views.","\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note: Request/arrival estimates assume no delays/failures; actual execution may stretch scenarios when the system degrades. Use this graph to\nreason about when failures strike relative to load."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"run-stop-save-and-version-experiments",children:"Run, Stop, Save, and Version Experiments"}),"\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.strong,{children:"Header"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Save pending changes."}),"\n",(0,r.jsx)(n.li,{children:"Delete the current experiment or version."}),"\n",(0,r.jsx)(n.li,{children:"Load an existing experiment or generate a new one."}),"\n",(0,r.jsx)(n.li,{children:"Create a new version (makes a copy to tweak safely)."}),"\n",(0,r.jsx)(n.li,{children:"Execute or Stop the experiment."}),"\n",(0,r.jsx)(n.li,{children:"Access General Help and context help for each section."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"analyze-results-in-grafana-dashboards",children:"Analyze Results in Grafana Dashboards"}),"\n",(0,r.jsx)(n.p,{children:"After each run, a version-specific Grafana dashboard is created/updated. Features include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Run comparison: every metric appears twice\u2014Now vs. N seconds ago\u2014aligning the previous run\u2019s start time to the latest run for apples-to-apples\nviewing."}),"\n",(0,r.jsx)(n.li,{children:"Sections:"}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Gatling Total: active users per scenario; responses (success/failed); key stats (min/mean/max latency, throughput, request rate). Goal breaches\nare highlighted."}),"\n",(0,r.jsx)(n.li,{children:"Gatling Errors: concrete error breakdowns (timeouts, server errors, failed checks)."}),"\n",(0,r.jsx)(n.li,{children:"Gatling Requests: per-request percentiles, throughput (RPS), success ratio\u2014pinpoint bottlenecks."}),"\n",(0,r.jsx)(n.li,{children:"Service Metrics: CPU/memory and internal latencies per MiSArch service (from cAdvisor, Dapr, and service OpenTelemetry), selectable by component."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tips-constraints-and-gotchas",children:"Tips, Constraints, and Gotchas"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Work DSL: Only ",(0,r.jsx)(n.strong,{children:"Gatling Kotlin DSL"})," for scenarios."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Open load only"})," for experiments (arrivals model)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time unit"})," for load durations is seconds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Failure persistence:"})," MiSArch failure settings persist until overwritten by a later failure set."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Chaos Toolkit extensions:"})," Custom extensions not pre-installed on the Executor may be unavailable\u2014prefer common, pre-installed ones."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Approximations:"})," Graphed requests/arrivals are estimates\u2014real runs with delays/failures will deviate."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Realistic pattern:"})," For long runs, realistic load is sampled from a real 24-hour dataset subset and scaled by your configured max arrivals."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"storage-structure--files",children:"Storage Structure & Files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Experiments are stored by ",(0,r.jsx)(n.strong,{children:"Test-UUID"})," and ",(0,r.jsx)(n.strong,{children:"Test-Version"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Each experiment bundles:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Work scripts (Kotlin DSL),"}),"\n",(0,r.jsx)(n.li,{children:"Per-scenario load configuration,"}),"\n",(0,r.jsx)(n.li,{children:"Chaos Toolkit JSON,"}),"\n",(0,r.jsx)(n.li,{children:"MiSArch Experiment Config JSON,"}),"\n",(0,r.jsx)(n.li,{children:"General config JSON (goals, optional warm-up, Test-UUID/version)."}),"\n"]}),"\n"]}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4106:(e,n,s)=>{s.d(n,{Z:()=>h});var r=s(92949),i=s(44996),l=s(67294),t=s(99276),o=s(85893);function a(e){let{image:n}=e;const r=(0,l.useId)();return(0,l.useEffect)((()=>{let e=new t.Z({gallery:"#"+CSS.escape(r),children:"a",pswpModule:()=>s.e(15826).then(s.bind(s,15826))});return e.init(),()=>{e.destroy(),e=null}}),[]),(0,o.jsx)("div",{className:"pswp-gallery",id:r,children:(0,o.jsx)("a",{href:n.url,"data-pswp-width":n.width,"data-pswp-height":n.height,target:"_blank",rel:"noreferrer",children:(0,o.jsx)("img",{src:n.url,alt:n.alt})},r+"-0")})}var c=s(91262);function h(e){let{path:n,extension:s,alt:l,width:t,height:h}=e;const{colorMode:d}=(0,r.I)(),x={url:(0,i.Z)(`${n}-${d}.${s??"svg"}`),alt:l,width:t,height:h};return(0,o.jsx)(c.Z,{children:()=>(0,o.jsx)(a,{image:x})})}},79168:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/Frontend_Entire-fef9bd20e9f0e26111b137d429e9c53a.png"},39990:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/Frontend_select-6fa0e80e3a738e2002b6f0e9bc9d07d1.png"},75705:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/load_patterns-4d3b6d2fa337290c516f7f9b01ece3db.svg"}}]);