"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[17706],{36765:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var t=o(85893),i=o(11151);const d={sidebar_position:7},s="Document the GraphQL API fully",a={id:"docs/dev-manuals/adr/graphql-documentation",title:"Document the GraphQL API fully",description:"Context and Problem Statement",source:"@site/docs/docs/dev-manuals/adr/0006-graphql-documentation.md",sourceDirName:"docs/dev-manuals/adr",slug:"/docs/dev-manuals/adr/graphql-documentation",permalink:"/docs/docs/dev-manuals/adr/graphql-documentation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Spelling Id like camel case",permalink:"/docs/docs/dev-manuals/adr/id-spelling"},next:{title:"Offset based connection pagination",permalink:"/docs/docs/dev-manuals/adr/graphql-connections"}},l={},c=[{value:"Context and Problem Statement",id:"context-and-problem-statement",level:2},{value:"Considered Options",id:"considered-options",level:2},{value:"Decision Outcome",id:"decision-outcome",level:2},{value:"Consequences",id:"consequences",level:3},{value:"Pros and Cons of the Options",id:"pros-and-cons-of-the-options",level:2},{value:"document everything",id:"document-everything",level:3},{value:"only add documentation when it provides additional value",id:"only-add-documentation-when-it-provides-additional-value",level:3}];function r(e){const n={h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"document-the-graphql-api-fully",children:"Document the GraphQL API fully"}),"\n",(0,t.jsx)(n.h2,{id:"context-and-problem-statement",children:"Context and Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"GraphQL allows to document both output and input fields.\nAs documentation is optional, we need to decide to which extend we want to enforce documenting the API."}),"\n",(0,t.jsx)(n.h2,{id:"considered-options",children:"Considered Options"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"document everything"}),"\n",(0,t.jsx)(n.li,{children:"only add documentation when it provides additional value"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"decision-outcome",children:"Decision Outcome"}),"\n",(0,t.jsx)(n.p,{children:'Chosen option: "document everything"'}),"\n",(0,t.jsx)(n.h3,{id:"consequences",children:"Consequences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Good, because allows us to skip regular code documentation where it is already available as GraphQL documentation (e.g. via annotations)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"pros-and-cons-of-the-options",children:"Pros and Cons of the Options"}),"\n",(0,t.jsx)(n.h3,{id:"document-everything",children:"document everything"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Good, because can be checked easily as part of the definition of done"}),"\n",(0,t.jsx)(n.li,{children:"Good, because ensures that parts of the API that seem simple, but may be more complex to external users are still documented"}),"\n",(0,t.jsx)(n.li,{children:"Bad, because more effort writing documentation not providing benefits"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"only-add-documentation-when-it-provides-additional-value",children:"only add documentation when it provides additional value"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Good, because allows us to skip documentation text not providing any new information"}),"\n",(0,t.jsx)(n.li,{children:"Bad, because risk of missing important documentation"}),"\n",(0,t.jsx)(n.li,{children:"Bad, because forgotten documentation is hard to distinguish from purposefully omitted documentation"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>s});var t=o(67294);const i={},d=t.createContext(i);function s(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);